import { DateTime, Duration } from 'luxon';

const στοιχείαΗμερομηνιών = (έναρξη, λήξη) => {
  const τρέχουσαΗμερομηνία = DateTime.now().toLocaleString({
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
  const τρέχονΈτος = DateTime.now().toLocaleString({
    year: 'numeric',
  });
  const τρέχονΜήνας = DateTime.now().toLocaleString({
    month: 'numeric',
  });
  const τρέχουσαΗμέρα = DateTime.now().toLocaleString({
    year: 'numeric',
  });

  const ημερομηνίαΈναρξης =
    έναρξη.length === 4 ? έναρξη : DateTime.fromFormat(`${έναρξη}`, 'LL/yyyy');

  const ημερομηνίαΛήξης = λήξη
    ? λήξη.length === 4
      ? λήξη
      : DateTime.fromFormat(`${λήξη}`, 'LL/yyyy')
    : '';

  const ημέραΈναρξης =
    έναρξη.split('/').length === 3 ? έναρξη.split('/')[0] : '';

  const ημέραΛήξης = λήξη.split('/').length === 3 ? λήξη.split('/')[0] : '';

  const μήναςΈναρξης =
    έναρξη.split('/').length === 3
      ? έναρξη.split('/')[1]
      : έναρξη.split('/').length === 2
      ? έναρξη.split('/')[0]
      : '';

  const μήναςΛήξης =
    λήξη.split('/').length === 3
      ? λήξη.split('/')[1]
      : λήξη.split('/').length === 2
      ? λήξη.split('/')[0]
      : '';

  const χρονολογίαΈναρξης =
    έναρξη.split('/').length === 3
      ? έναρξη.split('/')[2]
      : έναρξη.split('/').length === 2
      ? έναρξη.split('/')[1]
      : έναρξη.split('/')[0];

  const χρονολογίαΛήξης =
    λήξη.split('/').length === 3
      ? λήξη.split('/')[2]
      : λήξη.split('/').length === 2
      ? λήξη.split('/')[1]
      : λήξη.split('/')[0];

  const μελλοντικόΉΠαρελθοντικόΓεγονός = ημέραΈναρξης
    ? χρονολογίαΈναρξης > τρέχονΈτος
      ? 'Μελλοντικό'
      : χρονολογίαΈναρξης === τρέχονΈτος && μήναςΈναρξης - τρέχονΜήνας > 0
      ? 'Μελλοντικό'
      : χρονολογίαΈναρξης === τρέχονΈτος &&
        μήναςΈναρξης === τρέχονΜήνας &&
        ημέραΈναρξης - τρέχουσαΗμέρα > 0
      ? 'Μελλοντικό'
      : 'Παρελθοντικό'
    : μήναςΈναρξης
    ? χρονολογίαΈναρξης > τρέχονΈτος
      ? 'Μελλοντικό'
      : χρονολογίαΈναρξης === τρέχονΈτος && μήναςΈναρξης - τρέχονΜήνας > 0
      ? 'Μελλοντικό'
      : χρονολογίαΈναρξης === τρέχονΈτος &&
        μήναςΈναρξης === τρέχονΜήνας &&
        ημέραΈναρξης - τρέχουσαΗμέρα > 0
      ? 'Μελλοντικό'
      : 'Παρελθοντικό'
    : χρονολογίαΈναρξης
    ? χρονολογίαΈναρξης > τρέχονΈτος
      ? 'Μελλοντικό'
      : 'Παρελθοντικό'
    : χρονολογίαΈναρξης === τρέχονΈτος &&
      μήναςΈναρξης === τρέχονΜήνας &&
      ημέραΈναρξης === τρέχουσαΗμέρα
    ? 'Σημερινό'
    : 'Παρελθοντικό';

  let διάρκειαΓεγονότοςΣεΗμέρες = λήξη
    ? parseFloat(
        Duration.fromObject({
          seconds: (ημερομηνίαΛήξης - ημερομηνίαΈναρξης) / 1000,
        })
          .as('days')
          .toFixed(0)
          .toString()
      )
    : 'Δ/Δ';

  let αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = 0;
  let ημέρεςΕβδομάδεςΜήνεςΈτη = '';

  if (
    διάρκειαΓεγονότοςΣεΗμέρες === 'Δ/Δ' &&
    μελλοντικόΉΠαρελθοντικόΓεγονός === 'Παρελθοντικό'
  ) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '';
    ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εν Εξελίξει';
  } else if (
    διάρκειαΓεγονότοςΣεΗμέρες === 'Δ/Δ' &&
    μελλοντικόΉΠαρελθοντικόΓεγονός === 'Μελλοντικό'
  ) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '';
    ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εν Αναμονή';
  } else if (διάρκειαΓεγονότοςΣεΗμέρες === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '';
    ημέρεςΕβδομάδεςΜήνεςΈτη = '';
  } else if (διάρκειαΓεγονότοςΣεΗμέρες % 30 === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες / 30;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Μήνας')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Μήνες');
  } else if (διάρκειαΓεγονότοςΣεΗμέρες % 7 === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες / 7;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εβδομάδα')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εβδομάδες');
  } else {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Ημέρα')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Ημέρες');
  }

  const κείμενοΔιάρκειαςΓεγονότος = `${αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών}${' '}${ημέρεςΕβδομάδεςΜήνεςΈτη}`;

  return {
    τρέχουσαΗμερομηνία,
    τρέχονΈτος,
    τρέχονΜήνας,
    τρέχουσαΗμέρα,
    ημερομηνίαΈναρξης,
    ημερομηνίαΛήξης,
    ημέραΈναρξης,
    ημέραΛήξης,
    μήναςΈναρξης,
    μήναςΛήξης,
    χρονολογίαΈναρξης,
    χρονολογίαΛήξης,
    μελλοντικόΉΠαρελθοντικόΓεγονός,
    διάρκειαΓεγονότοςΣεΗμέρες,
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών,
    ημέρεςΕβδομάδεςΜήνεςΈτη,
    κείμενοΔιάρκειαςΓεγονότος,
  };
};

export { στοιχείαΗμερομηνιών };
