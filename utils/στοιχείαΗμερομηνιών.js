import { DateTime, Duration } from 'luxon';

const στοιχείαΗμερομηνιών = (έναρξη, λήξη) => {
  const τρέχουσαΗμερομηνία = DateTime.now().toLocaleString({
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
  const τρέχονΈτος = DateTime.now().toLocaleString({
    year: 'numeric',
  });
  const τρέχονΜήνας = DateTime.now().toLocaleString({
    month: 'numeric',
  });
  const τρέχουσαΗμέρα = DateTime.now().toLocaleString({
    year: 'numeric',
  });

  let ημερομηνίαΈναρξης = '';
  let ημέραΈναρξης = '';
  let μήναςΈναρξης = '';
  let χρονολογίαΈναρξης = '';

  if (έναρξη) {
    ημερομηνίαΈναρξης =
      έναρξη.length === 4
        ? έναρξη
        : έναρξη.length === 7
          ? DateTime.fromFormat(`${έναρξη}`, 'LL/yyyy')
          : DateTime.fromFormat(`${έναρξη}`, 'dd/LL/yyyy');

    ημέραΈναρξης = έναρξη.split('/').length === 3 ? έναρξη.split('/')[0] : '';

    μήναςΈναρξης =
      έναρξη.split('/').length === 3
        ? έναρξη.split('/')[1]
        : έναρξη.split('/').length === 2
          ? έναρξη.split('/')[0]
          : '';

    χρονολογίαΈναρξης =
      έναρξη.split('/').length === 3
        ? έναρξη.split('/')[2]
        : έναρξη.split('/').length === 2
          ? έναρξη.split('/')[1]
          : έναρξη.split('/')[0];
  }

  let ημέραΛήξης = '';
  let μήναςΛήξης = '';
  let χρονολογίαΛήξης = '';

  const ημερομηνίαΛήξης = λήξη
    ? λήξη.length === 4
      ? λήξη
      : λήξη.length === 7
        ? DateTime.fromFormat(`${λήξη}`, 'LL/yyyy')
        : DateTime.fromFormat(`${λήξη}`, 'dd/LL/yyyy')
    : '';

  if (λήξη) {
    ημέραΛήξης = λήξη.split('/').length === 3 ? λήξη.split('/')[0] : '';

    μήναςΛήξης =
      λήξη.split('/').length === 3
        ? λήξη.split('/')[1]
        : λήξη.split('/').length === 2
          ? λήξη.split('/')[0]
          : '';

    χρονολογίαΛήξης =
      λήξη.split('/').length === 3
        ? λήξη.split('/')[2]
        : λήξη.split('/').length === 2
          ? λήξη.split('/')[1]
          : λήξη.split('/')[0];
  }

  const μελλοντικόΉΠαρελθοντικόΓεγονός = ημέραΈναρξης
    ? ημέραΈναρξης === τρέχουσαΗμέρα &&
      μήναςΈναρξης === τρέχονΜήνας &&
      χρονολογίαΈναρξης === τρέχονΈτος
      ? 'Σημερινό'
      : χρονολογίαΈναρξης > τρέχονΈτος
        ? 'Μελλοντικό'
        : χρονολογίαΈναρξης === τρέχονΈτος && μήναςΈναρξης - τρέχονΜήνας > 0
          ? 'Μελλοντικό'
          : χρονολογίαΈναρξης === τρέχονΈτος &&
              μήναςΈναρξης === τρέχονΜήνας &&
              ημέραΈναρξης - τρέχουσαΗμέρα > 0
            ? 'Μελλοντικό'
            : 'Παρελθοντικό'
    : μήναςΈναρξης
      ? χρονολογίαΈναρξης > τρέχονΈτος
        ? 'Μελλοντικό'
        : χρονολογίαΈναρξης === τρέχονΈτος && μήναςΈναρξης - τρέχονΜήνας > 0
          ? 'Μελλοντικό'
          : χρονολογίαΈναρξης === τρέχονΈτος &&
              μήναςΈναρξης === τρέχονΜήνας &&
              ημέραΈναρξης - τρέχουσαΗμέρα > 0
            ? 'Μελλοντικό'
            : 'Παρελθοντικό'
      : χρονολογίαΈναρξης
        ? χρονολογίαΈναρξης > τρέχονΈτος || χρονολογίαΈναρξης === τρέχονΈτος
          ? 'Μελλοντικό'
          : 'Παρελθοντικό'
        : 'Παρελθοντικό';

  let διάρκειαΓεγονότοςΣεΗμέρες = λήξη
    ? parseFloat(
        Duration.fromObject({
          seconds: (ημερομηνίαΛήξης - ημερομηνίαΈναρξης) / 1000,
        })
          .as('days')
          .toFixed(0)
          .toString()
      )
    : 'Δ/Δ';

  let αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = 0;
  let ημέρεςΕβδομάδεςΜήνεςΈτη = '';

  if (
    διάρκειαΓεγονότοςΣεΗμέρες === 'Δ/Δ' &&
    μελλοντικόΉΠαρελθοντικόΓεγονός === 'Παρελθοντικό'
  ) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '';
    ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εν Εξελίξει';
  } else if (
    διάρκειαΓεγονότοςΣεΗμέρες === 'Δ/Δ' &&
    μελλοντικόΉΠαρελθοντικόΓεγονός === 'Μελλοντικό'
  ) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '';
    ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εν Αναμονή';
  } else if (διάρκειαΓεγονότοςΣεΗμέρες === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = '<1';
    ημέρεςΕβδομάδεςΜήνεςΈτη = 'Ημέρα';
  } else if (διάρκειαΓεγονότοςΣεΗμέρες % 30 === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες / 30;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Μήνας')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Μήνες');
  } else if (διάρκειαΓεγονότοςΣεΗμέρες % 7 === 0) {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες / 7;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εβδομάδα')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Εβδομάδες');
  } else {
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών = διάρκειαΓεγονότοςΣεΗμέρες;
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών === 1
      ? (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Ημέρα')
      : (ημέρεςΕβδομάδεςΜήνεςΈτη = 'Ημέρες');
  }

  const κείμενοΔιάρκειαςΓεγονότος = `${αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών}${' '}${ημέρεςΕβδομάδεςΜήνεςΈτη}`;

  return {
    τρέχουσαΗμερομηνία,
    τρέχονΈτος,
    τρέχονΜήνας,
    τρέχουσαΗμέρα,
    ημερομηνίαΈναρξης,
    ημερομηνίαΛήξης,
    ημέραΈναρξης,
    ημέραΛήξης,
    μήναςΈναρξης,
    μήναςΛήξης,
    χρονολογίαΈναρξης,
    χρονολογίαΛήξης,
    μελλοντικόΉΠαρελθοντικόΓεγονός,
    διάρκειαΓεγονότοςΣεΗμέρες,
    αριθμόςΗμερώνΕβδομάδωνΜηνώνΕτών,
    ημέρεςΕβδομάδεςΜήνεςΈτη,
    κείμενοΔιάρκειαςΓεγονότος,
  };
};

export { στοιχείαΗμερομηνιών };
