'use client';

import Γεγονός from '@/components/Χρονολόγιο/Γεγονός';

import { χρονολόγιο } from '@/db/χρονολόγιο';
import { useAppContext } from '@/context/AppContext';

import { στοιχείαΗμερομηνιών } from '@/utils/στοιχείαΗμερομηνιών';

const EventFilters = () => {
  const { φίλτροΚατάστασηςΓεγονότωνΧρονολογίου } = useAppContext();

  return (
    <>
      {χρονολόγιο
        .filter((στιγμή) => στιγμή.γεγονός.κατηγορία === 'Προγραμματισμός')
        .filter((στιγμή) => {
          const { γεγονός } = στιγμή;
          const { είδος, έναρξη, λήξη, ολοκλήρωση } = γεγονός;
          const { μελλοντικόΉΠαρελθοντικόΓεγονός } = στοιχείαΗμερομηνιών(
            έναρξη,
            λήξη
          );

          const κατάστασηΓεγονότος =
            μελλοντικόΉΠαρελθοντικόΓεγονός === 'Μελλοντικό'
              ? 'Εν αναμονή'
              : !ολοκλήρωση
                ? 'Παρατημένο'
                : λήξη === ''
                  ? 'Εν εξελίξει'
                  : 'Ολοκληρωμένο';

          if (φίλτροΚατάστασηςΓεγονότωνΧρονολογίου === '') {
            return στιγμή === στιγμή;
          } else if (φίλτροΚατάστασηςΓεγονότωνΧρονολογίου === είδος) {
            return φίλτροΚατάστασηςΓεγονότωνΧρονολογίου === είδος;
          } else {
            return κατάστασηΓεγονότος === φίλτροΚατάστασηςΓεγονότωνΧρονολογίου;
          }
        })
        .reverse()
        .map((στιγμή, index) => {
          const γεγονόςΣεΠεριττόΑριθμό = (index + 1) % 2 !== 0 ? true : false;

          return (
            <Γεγονός
              key={στιγμή.ταυτότητα}
              στιγμή={στιγμή}
              γεγονόςΣεΠεριττόΑριθμό={γεγονόςΣεΠεριττόΑριθμό}
            />
          );
        })}
    </>
  );
};
export default EventFilters;
